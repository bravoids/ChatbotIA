import random
import spacy

# Cargar el modelo de spaCy en espaÃ±ol
nlp = spacy.load("es_core_news_sm")

# Diccionario de respuestas con mÃ¡s variaciones
respuestas = {
    "saludo": ["Â¡Hola! Â¿CÃ³mo te sientes hoy?", "Â¡Hola! Â¿En quÃ© puedo ayudarte?", "Â¡Bienvenido! Â¿CÃ³mo estÃ¡s?"],
    "tristeza": ["Lamento que te sientas asÃ­. Â¿Quieres hablar sobre ello?", 
                 "Recuerda que no estÃ¡s solo. Hablar con alguien de confianza puede ayudar.",
                 "Los momentos difÃ­ciles pasan. Â¿Quieres contarme quÃ© sucede?"],
    "ansiedad": ["La respiraciÃ³n profunda puede ayudar a calmar la ansiedad. Â¿Quieres intentar una tÃ©cnica?", 
                 "Si te sientes ansioso con frecuencia, puede ser Ãºtil escribir tus pensamientos.",
                 "Escuchar mÃºsica relajante puede ayudar a reducir la ansiedad. Â¿Te gustarÃ­a probarlo?"],
    "felicidad": ["Â¡Me alegra escuchar eso! Â¿QuÃ© ha hecho que tu dÃ­a sea bueno?", 
                  "La felicidad es contagiosa. Â¡Sigue disfrutando tu dÃ­a!",
                  "Â¡Eso es genial! Aprecia cada momento de felicidad."],
    "despedida": ["Hasta luego. Â¡CuÃ­date!", "AdiÃ³s, espero hablar contigo pronto.", "Nos vemos, cuÃ­date mucho ğŸ˜Š"]
}

# FunciÃ³n para clasificar la intenciÃ³n del usuario
def clasificar_intencion(mensaje):
    doc = nlp(mensaje.lower())  # Procesar el texto con spaCy
    for token in doc:
        if token.lemma_ in ["hola", "buenos", "saludo"]:
            return "saludo"
        elif token.lemma_ in ["triste", "deprimido", "llorar"]:
            return "tristeza"
        elif token.lemma_ in ["ansiedad", "estresado", "nervioso"]:
            return "ansiedad"
        elif token.lemma_ in ["feliz", "contento", "alegre"]:
            return "felicidad"
        elif token.lemma_ in ["adios", "hasta", "despedida"]:
            return "despedida"
    
    return "desconocido"

# FunciÃ³n para obtener la respuesta del chatbot
def obtener_respuesta(mensaje):
    intencion = clasificar_intencion(mensaje)
    if intencion in respuestas:
        return random.choice(respuestas[intencion])
    
    return "Lo siento, no entiendo bien. Â¿Puedes explicarlo de otra manera?"

# Bucle principal del chatbot
def iniciar_chat():
    print("ğŸ¤– Chatbot de Bienestar (con NLP): Escribe 'adios' para salir.")
    while True:
        mensaje_usuario = input("TÃº: ")
        if mensaje_usuario.lower() in ["adios", "hasta luego", "nos vemos"]:
            print("Chatbot: Hasta luego. Â¡CuÃ­date! ğŸ˜Š")
            break
        respuesta = obtener_respuesta(mensaje_usuario)
        print(f"Chatbot: {respuesta}")

# Ejecutar el chatbot
if __name__ == "__main__":
    iniciar_chat() 